spring:
  datasource:
    url: jdbc:mysql://localhost:3306/fb

    username: tmcnamara
    password: se4BuT16po!



#    url: jdbc:postgresql://localhost:5432/faithfulblendz_db?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#    username: jswalk117
#    password: Password1!


  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true

  security:
    #Needed for Oauth2 authentication
    oauth2:
      client:
        registration:
          google:
            clientId: 283333857500-kspinbqu0du9vbouihcptjgi937huvs2.apps.googleusercontent.com
            clientSecret: t-78gEJdn0Cijducbu-uL2gV
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 121189305185277
            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: f4c979956b9ad35ae0db
            clientSecret: 7fe253f541dfffef1a871cd7d403414753217eb8
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

#Needed for JWT
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

server:
  port: 8080